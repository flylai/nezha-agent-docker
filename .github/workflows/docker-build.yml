name: Build and Push Docker Image

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force rebuild even if no new version is found (true/false)'
        required: false
        default: 'false'

jobs:
  build_amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Check for Nezha Agent updates
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/nezhahq/agent/releases/latest | jq -r '.tag_name')
          if [[ -z "$LATEST_VERSION" ]]; then
            echo "Failed to get latest version" >&2
            exit 1
          fi
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Build and push (AMD64)
        if: env.LATEST_VERSION != env.CURRENT_VERSION || github.event.inputs.force_build == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            kanggle/nezha-agent:${{ env.LATEST_VERSION }}-amd64
            kanggle/nezha-agent:latest-amd64
          build-args: |
            VERSION=${{ env.LATEST_VERSION }}

  build_arm64:
    runs-on: [self-hosted, linux, ARM64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push (ARM64)
        if: env.LATEST_VERSION != env.CURRENT_VERSION || github.event.inputs.force_build == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          push: true
          tags: |
            kanggle/nezha-agent:${{ env.LATEST_VERSION }}-arm64
            kanggle/nezha-agent:latest-arm64
          build-args: |
            VERSION=${{ env.LATEST_VERSION }}

  create_manifest:
    runs-on: ubuntu-latest
    needs: [build_amd64, build_arm64]
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create and push multi-arch manifest
        run: |
          docker manifest create kanggle/nezha-agent:${{ env.LATEST_VERSION }} \
            --amend kanggle/nezha-agent:${{ env.LATEST_VERSION }}-amd64 \
            --amend kanggle/nezha-agent:${{ env.LATEST_VERSION }}-arm64

          docker manifest create kanggle/nezha-agent:latest \
            --amend kanggle/nezha-agent:latest-amd64 \
            --amend kanggle/nezha-agent:latest-arm64

          docker manifest push kanggle/nezha-agent:${{ env.LATEST_VERSION }}
          docker manifest push kanggle/nezha-agent:latest
